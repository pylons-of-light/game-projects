<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_maleCitizenDown</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_citizenMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Needed to move these variable above the conditional checks you are doing below.
// Something in those checks cause these variables to never get set and then the game
// will crash when something tries to access them later on; maybe your exit statement 
// on 73, idk.
//Edit: Yes, almost certainly that was the problem! Sorry.
ranx = x
rany = y

walkSpeed = 1
runSpeed = 4

wanderDialogue[0] = "Nice night we're having."
wanderDialogue[1] = "The lights... catch the eyes..."
wanderDialogue[2] = "Hmm mmh."
wanderDialogue[3] = "Tired... should go to bed..."
wanderDialogue[4] = "Hey, what's that?"
wanderDialogue[5] = "I wish there were more to do in this town."
wanderDialogue[6] = "Did you hear what happened to Alice?"
wanderDialogue[7] = "There's a new wine shop in town."
wanderDialogue[8] = "My arms are stiff after all the crates I stacked today."
wanderDialogue[9] = "I heard Mary is going to divorce Roger."
wanderDialogue[10] = "There's not much to do in this town."
wanderDialogue[11] = "I've been thinking about getting a cat."
wanderDialogue[12] = "If we had more dogs, we'd have fewer rats."
wanderDialogue[13] = "I wish the carnival would come to town."
wanderDialogue[14] = "It's a big world out there."
wanderDialogue[15] = "I'm bushed."
wanderDialogue[16] = "Heh..."
wanderDialogue[17] = "Just whistling in the wind..."
wanderDialogue[18] = "Why is it always nighttime around here?"
wanderDialogue[19] = "Need a long hot shower."
wanderDialogue[20] = "Damn moles keep digging holes in my lawn."

fleeDialogue[0] = "No! I'm not ready to die yet!"
fleeDialogue[1] = "It's coming..."
fleeDialogue[2] = "Waaaugh!"
fleeDialogue[3] = "Get away from me!"
fleeDialogue[4] = "No... no... no..."
fleeDialogue[5] = "What the hell?!"
fleeDialogue[6] = "Time to RUN FOR MY LIFE!"
fleeDialogue[7] = "I don't want to die!"
fleeDialogue[8] = "Help!"
fleeDialogue[9] = "HELP!"
fleeDialogue[10] = "Whatever it is, kill it!"
fleeDialogue[11] = "I don't deserve this!"
fleeDialogue[12] = "This isn't... supposed..."
fleeDialogue[13] = "It's coming for me!"
fleeDialogue[14] = "This isn't right!"
fleeDialogue[15] = "No, no!"
fleeDialogue[16] = "Get me the hell out of here!"
fleeDialogue[17] = "Heaven save us!"
fleeDialogue[18] = "Holy..."
fleeDialogue[19] = "Oh my god."
fleeDialogue[20] = "The Reaper!"

dieDialogue[0] = "Aaaugh!"
dieDialogue[1] = "My soul... splitting..."
dieDialogue[2] = "This feeling..."
dieDialogue[3] = "No, I'm not ready--"
dieDialogue[4] = "Help!"
dieDialogue[5] = "Urgh.."
dieDialogue[6] = "My--"
dieDialogue[7] = "About... time..."
dieDialogue[8] = "This isn't... no..."
dieDialogue[9] = "My last words... not very good."
dieDialogue[10] = "I'm coming home."
dieDialogue[11] = "Why?"
dieDialogue[12] = "Why me?"
dieDialogue[13] = "Noooo!"
dieDialogue[14] = "This..."
dieDialogue[15] = "..."
dieDialogue[16] = "Oh no."
dieDialogue[17] = "Sigh..."
dieDialogue[18] = "I'll make you a deal--"
dieDialogue[19] = "Well, isn't this wonderful."
dieDialogue[20] = "And I never told--"

healthBoost = HEALTH_UNIT * 12

image_speed = 0
direction = DOWN

bMale = choose(true, false)
sprite = choose(0, 1)   //Sprite index

//TODO: Remove: this alternative method.
//sprite_index = CitizenSprite(bMale, sprite, DOWN)

dialogue = ''

bRunning = false
bDying = false
bCowering = false

SetCitizenSprite(self)

//Are all other citizens grayed out? If not, make this guy non-grayed. Otherwise, decide whether
//to gray this NPC out or not based on a random chance.

bGrayed = false
bGrayedForever = false
bStartingNPC = false   //Is this a NPC that was created in the level editor, not by random spawning?
grayedCount = 0


//---------------------------------------------------------
//---Determine whether this NPC should be grayed out or not

//Did we just start this level? If so, due to a design flaw in GameMaker, all the citizens will already
//exist, and none of them will have bGrayed set except for the current instance. So we can't just
//iterate through them and test for bGrayed -- and GML has no way to test if a variable exists yet.
//So instead, we won't iterate through the instances, we'll pretend that other grayed-out NPCs already
//exist.
if current_time - g_levelStartTime &lt; 500 {   //Did we just start the level?
    bStartingNPC = true;
}
else {
    with citizen {
        if self == other
            continue
        if bGrayed {
            other.grayedCount += 1
            break
        }
    }
}

//Only consider making the NPC grayed out if: (1) there aren't that many grayed-out NPCs
//already; (2) the player isn't even close to low on health.
if bStartingNPC or (grayedCount &lt; floor(instance_number(citizen) / 4) and (g_health &gt; HEALTH_MAX / 2)) {
    if bStartingNPC
        bGrayed = random(1) &lt; .7
    else
        bGrayed = (random(1) * 1.6 &lt;= g_levelEasiness)   //Very arbitrary; probably needs adjustment
    
    if bGrayed {
        /*
        //These values work for non-white-colored sprites
        image_blend = make_colour_hsv(0, 0, 150)
        image_alpha = .7
        */
        image_blend = make_colour_hsv(255, 0, 100)
        image_alpha = .9
        
        //50%: 15 seconds to 2 minutes
        //25%: 2 minutes to 3 minutes
        //25%: forever (they stay gray forever)
        percent = random(1)
        if percent &lt;= .50 {
            alarm[3] = SECOND * (15 + (120-15) * random(1))
            //alarm[3] = 1
            //dialogue = string(alarm[3]/SECOND)   //TODO remove
        }
        else if percent &lt;= .75 {
            alarm[3] = SECOND * (120 + (180-120) * random(1))
            //alarm[3] = 1
            //dialogue = string(alarm[3]/SECOND)   //TODO remove
        }
        else {
            bGrayedForever = true
            //dialogue = "grayed forever"   //TODO remove
        }
    }
}
else{
    bGrayed = false
}
//---------------------------------------------------------



//comment
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Un-gray the citizen. Note that this should never be called if bGrayedForever is true

bGrayed = false
image_blend = c_white   //Or -1; anyway, this means to draw the sprite using normal colors.
image_alpha = 1

//dialogue = "un-grayed"   //TODO remove
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TODO maybe remove; experimental

//Drop some time from the current and total level times.

if object_get_name(instance.object_index) == 'child'
    g_levelSeconds -= 30
else
    g_levelSeconds -= 15

if g_levelSeconds &lt; 1
    g_levelSeconds = 1

g_levelDuration = g_levelSeconds * 1000

g_soulCount += 1

instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bRunning = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Clear dialogue
dialogue = ''
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if alarm[3] &gt; 0
    dialogue = string(ceil(alarm[3]/SECOND))   //TODO remove
*/

CitizenMove(self)

if bDying
    if image_alpha &gt; 0 image_alpha -= 0.05;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if distance_to_object(reaper) &lt; 50 {
    if bGrayed {
        var text
        if bMale
            text = "His"
        else
            text = "Her"
        ShowDialogue(reaper, text + " time has not yet come.", 2)
        exit
    }
    
    //Set offsets to use when displaying thunder
    var xOffset = 100, yOffset
    switch object_index {
        case child:
            yOffset = 130
            break
        default:
            yOffset = 120
            break
    }
    
    instance_create(x + sprite_width/2 - xOffset, y + sprite_height/2 - yOffset, thunder)
    CitizenDie(self)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
