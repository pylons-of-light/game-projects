<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()

//room_goto(rm_town)

//Note: This only works if there's a file in
//C:\Users\USERNAME\AppData\Local\FinalGame
//(on Windows 7 anyway) named 'rains'

draw_set_alpha(1)

//Unlock all towns.
//TODO remove.
/*
g_town2Unlocked = true
g_town3Unlocked = true
g_town5Unlocked = true
*/

//if true {
if file_exists("rains") and false {
    //TODO remove; the actual starting townId should be 'town1Tavern'
    //g_townId = 'town1'
    
    g_firstTimeInOcean = false
    //g_firstTimeWarped = false
    
    //TODO remove
    g_shipMaxSpeed += CREW_SPEED_BOOST
    
    g_town2Unlocked = true
    g_town3Unlocked = true
    g_town5Unlocked = true
    g_shipwreckUnlocked = true
    
    g_finalIslandUnlocked = true
    ds_list_add(g_townMarkers, 'boss_ship_intro')
    
    ds_list_add(g_townMarkers, 't3a2')
    
    //ds_list_delete(g_townMarkers, ds_list_find_index(g_townMarkers, 'oa1'))
    
    //ds_list_add(g_townMarkers, 'gold_goal1')
    //ds_list_add(g_townMarkers, 'ship_spawn1')
    ds_list_add(g_townMarkers, 'v1i1')
    
    ds_list_delete(g_townMarkers, ds_list_find_index(g_townMarkers, 'd1a1'))
    ds_list_delete(g_townMarkers, ds_list_find_index(g_townMarkers, 'd2a1'))
    
    //room_goto(rm_town)
    //room_goto(rm_ocean)
    //room_goto(rm_cave)
    /*
    g_shipX = g_town3X
    g_shipY = g_town3Y
    g_shipDir = g_town3Dir
    */
    /*
    g_shipX = g_dungeon1X
    g_shipY = g_dungeon1Y
    g_shipDir = g_dungeon1Dir
    */
    //TODO for merchant tests
    
    g_townId = 'town4'
    ds_list_delete(g_townMarkers, ds_list_find_index(g_townMarkers, 't1a1'))
    ds_list_delete(g_townMarkers, ds_list_find_index(g_townMarkers, 't4a1'))
    
    g_shipX = g_dungeon2X
    g_shipY = g_dungeon2Y
    g_shipDir = g_dungeon2Dir
    ds_list_delete(g_townMarkers, ds_list_find_index(g_townMarkers, 'boss_ship_intro'))
    
    g_shipX = g_town4X
    g_shipY = g_town4Y
    g_shipDir = g_town4Dir
    
    g_gold = 20000
    g_gold = 1900
    
    g_townId = 'town1Tavern'
    //room_goto(rm_ocean)
    room_goto(rm_town)
    //room_goto(rm_cave)
    //room_goto(rm_intro)
}
else {
    //Remove dungeon auto-dialogues
    //ds_list_delete(g_townMarkers, ds_list_find_index(g_townMarkers, 'd1a1'))
    //ds_list_delete(g_townMarkers, ds_list_find_index(g_townMarkers, 'd2a1'))
    //room_goto_next()
}

if g_hitNewGameButton {
    g_hitNewGameButton = false
    
    //Note that this must be tested even if g_paused is true, since g_paused is currently
    //reset when the game is restarted (by whatever means). As such, g_pausedRoom might still
    //hold a persistent room.
    if g_pausedRoom != -1 {
        if ds_list_find_index(g_removePersistenceFrom, g_pausedRoom) == -1
            ds_list_add(g_removePersistenceFrom, g_pausedRoom)
    }
    
    g_paused = false
    g_pausedRoom = -1
    g_pausedMusic = -1
    g_resuming = false
    room_goto(rm_intro)   //Restart the game
}

if g_paused {
    instance_create(400, 460, titleNewGameButton)
}

if not sound_isplaying(music_lostShip) and not sound_isplaying(music_stillWater) {
    //PlayMusic(choose(music_lostShip, music_stillWater))
    
    var music = choose(music_lostShip, music_stillWater);
    
    sound_stop_all()
    sound_play(music)
    sound_loop(music)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(controlsImg) or instance_exists(creditsImg)
    exit

if mouse_check_button_pressed(mb_left) {
    if mouse_x &gt;= 222 and mouse_y &gt;= 402 and mouse_x &lt;= 338 and mouse_y &lt;= 444 {
        if not g_paused {
            //This should never actually be true. If RestartGame() is never run from a persistent
            //room, g_pausedRoom will be -1 here. Even hitting the New Game button won't have any
            //effect, since that automatically triggers the start of a new game -- we don't have
            //to wait to click this other button here.
            if g_pausedRoom != -1 {
                if ds_list_find_index(g_removePersistenceFrom, g_pausedRoom) == -1
                    ds_list_add(g_removePersistenceFrom, g_pausedRoom)
            }
            //We shouldn't actually need to reset most of this stuff, but...
            g_paused = false
            g_pausedRoom = -1   //This definitely should probably be set, though.
            g_pausedMusic = -1
            g_resuming = false
            
            room_goto(rm_intro)   //Start the game
        }
        else {
            g_resuming = true
            room_goto(g_pausedRoom)
        }
    }
    
    if mouse_x &gt;= 222 and mouse_y &gt;= 445 and mouse_x &lt;= 329 and mouse_y &lt;= 479 {
        if g_pausedRoom != rm_ocean
            show_message("You can only save from the world map.")
        else if not ds_list_empty(g_dlg)
            show_message("Can't save during dialogue sequence.")
        else {
            if file_exists('save.ini') {
                var bOverwrite = show_question("Overwrite previous save?");
                if bOverwrite {
                    SaveGame()
                }
            }
            else {
                SaveGame()
            }
        }
    }
    
    if mouse_x &gt;= 222 and mouse_y &gt;= 480 and mouse_x &lt;= 338 and mouse_y &lt;= 516 {
        if file_exists('save.ini') {
            var bLoad = show_question("Load game, losing current progress?");
            if bLoad {
                LoadGame()
            }
        }
        else
            show_message("No save file found.")
    }
    
    if mouse_x &gt;= 222 and mouse_y &gt;= 517 and mouse_x &lt;= 391 and mouse_y &lt;= 554
        instance_create(0, 0, controlsImg)
    
    if mouse_x &gt;= 222 and mouse_y &gt;= 555 and mouse_x &lt;= 375 and mouse_y &lt;= 593
        instance_create(0, 0, creditsImg)
    
    if mouse_x &gt;= 222 and mouse_y &gt;= 594 and mouse_x &lt;= 332 and mouse_y &lt;= 632
        game_end()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_control)
    room_goto_next()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(controlsImg) or instance_exists(creditsImg)
    exit

if mouse_x &gt;= 222 and mouse_y &gt;= 402 and mouse_x &lt;= 338 and mouse_y &lt;= 444
    draw_sprite(spr_titleStart, 0, 222, 402)

if mouse_x &gt;= 222 and mouse_y &gt;= 445 and mouse_x &lt;= 329 and mouse_y &lt;= 479
    draw_sprite(spr_titleSave, 0, 222, 445)

if mouse_x &gt;= 222 and mouse_y &gt;= 480 and mouse_x &lt;= 338 and mouse_y &lt;= 516
    draw_sprite(spr_titleLoad, 0, 222, 480)

if mouse_x &gt;= 222 and mouse_y &gt;= 517 and mouse_x &lt;= 391 and mouse_y &lt;= 554
    draw_sprite(spr_titleControls, 0, 222, 517)

if mouse_x &gt;= 222 and mouse_y &gt;= 555 and mouse_x &lt;= 375 and mouse_y &lt;= 593
    draw_sprite(spr_titleCredits, 0, 222, 555)

if mouse_x &gt;= 222 and mouse_y &gt;= 594 and mouse_x &lt;= 332 and mouse_y &lt;= 632
    draw_sprite(spr_titleQuit, 0, 222, 594)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
