<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 0
y = 235

bVisible = false
bUsable = false

alpha = 0
portraitAlpha = 0

list = ds_list_create()

speaker = ''
speakerPortrait = -1 

text = ''
bNewPage = true


//TODO uncomment; the 1 is temporary. Maybe.
//alarmTime = room_speed / 20
alarmTime = 1

if g_lastChangedRoomTime != 0
    g_lastChangedRoomTime = current_time
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not ds_list_empty(list) {
    if bNewPage = true {
        var pos = string_pos(' ', list[|0]);
        if pos == -1
            speaker = '?'
        else {
            oldSpeaker = speaker
            speaker = string_copy(list[|0], 1, pos-1)
            
            //Common names
            if speaker == 'l' or speaker == 'L'
                speaker = 'Lise'
            else if speaker == 'g' or speaker == 'G'
                speaker = 'Grant'
            else if speaker == 'lu' or speaker == 'Lu'
                speaker = 'Lucy'
            
            if speaker != oldSpeaker {
                speakerPortrait = GetPortrait(speaker)
                portraitAlpha = 0
            }
            
            list[|0] = string_copy(list[|0], pos+1, string_length(list[|0]) - pos)
        }
        bNewPage = false
    }
    if string_length(list[|0]) &gt; 0 {
        text += string_char_at(list[|0], 0)
        list[|0] = string_copy(list[|0], 2, string_length(list[|0])-1)
        
        alarm[0] = alarmTime
    }
}
else {
    bUsable = false
    bNewPage = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left) {
    if bUsable and alarm[0] &lt; 0 {
        if not ds_list_empty(list) and string_length(list[|0]) == 0
            ds_list_delete(list, 0)
        
        text = ''
        bNewPage = true
        alarm[0] = alarmTime
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if current_time - g_lastChangedRoomTime &gt; 200 and room != rm_town {
    g_lastChangedRoomTime = current_time
    room_goto_next()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if current_time - g_lastChangedRoomTime &gt; 200 and room != rm_title {
    g_lastChangedRoomTime = current_time
    room_goto_previous()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bUsable and alarm[0] &lt; 0 {
    if not ds_list_empty(list) and string_length(list[|0]) == 0
        ds_list_delete(list, 0)
    
    text = ''
    bNewPage = true
    alarm[0] = alarmTime
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bUsable and text != '' {
    if not ds_list_empty(list)
        ds_list_delete(list, 0)
    
    text = ''
    bNewPage = true
    alarm[0] = alarmTime
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bVisible {
    if bUsable {
        if alpha != 1 {
            alpha += .05
            if alpha &gt; 1
                alpha = 1
        }
    }
    else {
        if alpha != 0 {
            alpha -= .05
            if alpha &lt;= 0 {
                alpha = 0
                bVisible = false
                
                //Prevent the old portrait from flashing at the start of the next dialogue sequence
                speaker = ''
                speakerPortrait = -1
            }
        }
    }
    
    if alpha &gt; 0 {
        draw_set_alpha(alpha)
        
        draw_sprite(spr_dialogueBox, 0, x, y)
        
        if speakerPortrait != -1 {
            if bUsable and portraitAlpha != 1 {
                portraitAlpha += .1
                if portraitAlpha &gt; 1
                    portraitAlpha = 1
                draw_set_alpha(portraitAlpha)
            }
            
            draw_sprite(speakerPortrait, 0, x + 6, y + 45)
            
            draw_set_alpha(alpha)
        }
        
        draw_set_font(fnt_default)
        draw_set_colour(c_white)
        draw_set_halign(fa_left)
        
        draw_text(x + 229, y + 87, speaker)
        
        if not ds_list_empty(list) {
            var pos = string_pos(' ', list[|0]);
            var remainingWord = '';
            if pos != -1
                remainingWord = string_copy(list[|0], 1, pos-1);
            draw_text(x + 234, y + 115, ParagraphedText(text, remainingWord))
        }
        else
            draw_text(x + 234, y + 115, ParagraphedText(text, ''))
        //draw_text_ext(x + 234, y + 115, text, 30, DIALOGUE_DRAW_WIDTH)   //TODO remove
        
        draw_set_alpha(1)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
