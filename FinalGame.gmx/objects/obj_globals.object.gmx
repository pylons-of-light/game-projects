<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Note: This object should only be put in one room, which the user will be in before any other
//room. (The title screen is a good bet.) Simply making this object persistent will prevent it
//from being recreated when going back to a previous room, but it won't stop it from being
//recreated for each separate room.

if not g_gameRestart
    exit

g_gameRestart = false


//Constants

globalvar g_AVATAR_SPEED;
g_AVATAR_SPEED = 4;

globalvar g_RIGHT;
g_RIGHT = 0;

globalvar g_UP;
g_UP = 90;

globalvar g_LEFT;
g_LEFT = 180;

globalvar g_DOWN;
g_DOWN = 270;


globalvar AVATAR_SPEED, RIGHT, UP, LEFT, DOWN;
AVATAR_SPEED = 4
RIGHT = 0
UP = 90
LEFT = 180
DOWN = 270

globalvar DIALOGUE_DRAW_WIDTH;
DIALOGUE_DRAW_WIDTH = 750

globalvar SHIP_HEALTH_MAX, LAND_HEALTH_MAX;
SHIP_HEALTH_MAX = 100
LAND_HEALTH_MAX = 100

globalvar GENERATE_RAND_LOCATIONS;
GENERATE_RAND_LOCATIONS = 10000   //When randomly placing spawned objects, make this many tries

globalvar HALF_SHIP;
HALF_SHIP = sprite_get_width(spr_shipMask) / 2

globalvar MINIMAP_MARKER_RANGE;
MINIMAP_MARKER_RANGE = 1200   //Somewhat arbitrary number (basically, "somewhat nearby" ships will be shown)

globalvar SOLID_WARP_TILE_ALPHA, SOLID_WARP_LAND_TILE_ALPHA, WARP_TILE_ALPHA, WARP_LAND_TILE_ALPHA;
SOLID_WARP_TILE_ALPHA = .15
SOLID_WARP_LAND_TILE_ALPHA = .3
WARP_TILE_ALPHA = .075
WARP_LAND_TILE_ALPHA = .15

globalvar WARP_OFFSET;
WARP_OFFSET = 16// + sprite_get_width(spr_playerUp) / 2

globalvar POTION_HEALTH, POTION_DROP_RATE, POTION_X_OFFSET, POTION_Y_OFFSET;
POTION_HEALTH = 2
POTION_DROP_RATE = .25
POTION_X_OFFSET = 16   //For drop position, use this as an offset from the NPC's x position
POTION_Y_OFFSET = 19   //Same for y position

globalvar FAST_ROOM_SPEED, SLOW_ROOM_SPEED, DIALOGUE_ROOM_SPEED;
FAST_ROOM_SPEED = 50
SLOW_ROOM_SPEED = 35
DIALOGUE_ROOM_SPEED = 35

globalvar RAPIER_ATTACK_DELAY;
RAPIER_ATTACK_DELAY = 400

globalvar SPEECH_DELAY;
SPEECH_DELAY = 10;


//--- Port details (for the place to put the ship when it leaves a port)

var shipDist = sprite_get_width(spr_playerShip);

//Even though these are lowercase (sorry) they're really constants.
//TODO maybe try to get these manually from the town port locations

globalvar g_town1X, g_town1Y, g_town1Dir;
g_town1Dir = 230
g_town1X = 5984 + lengthdir_x(shipDist, g_town1Dir)
g_town1Y = 4048 + lengthdir_y(shipDist, g_town1Dir)

globalvar g_town2X, g_town2Y, g_town2Dir;
g_town2Dir = 340
g_town2X = 3136 + lengthdir_x(shipDist, g_town2Dir)
g_town2Y = 4832 + lengthdir_y(shipDist, g_town2Dir)

globalvar g_town3X, g_town3Y, g_town3Dir;
g_town3Dir = 120
g_town3X = 8576 + lengthdir_x(shipDist, g_town3Dir)
g_town3Y = 2272 + lengthdir_y(shipDist, g_town3Dir)

globalvar g_town4X, g_town4Y, g_town4Dir;
g_town4Dir = 200
g_town4X = 8096 + lengthdir_x(shipDist, g_town4Dir)
g_town4Y = 7232 + lengthdir_y(shipDist, g_town4Dir)

globalvar g_town5X, g_town5Y, g_town5Dir;
g_town5Dir = 80
g_town5X = 3264 + lengthdir_x(shipDist, g_town5Dir)
g_town5Y = 8784 + lengthdir_y(shipDist, g_town5Dir)

globalvar g_dungeon1X, g_dungeon1Y, g_dungeon1Dir;
g_dungeon1Dir = 110
g_dungeon1X = 3552 + lengthdir_x(shipDist, g_dungeon1Dir)
g_dungeon1Y = 8800 + lengthdir_y(shipDist, g_dungeon1Dir)

globalvar g_dungeon2X, g_dungeon2Y, g_dungeon2Dir;
g_dungeon2Dir = 290
g_dungeon2X = 1120 + lengthdir_x(shipDist, g_dungeon2Dir)
g_dungeon2Y = 1456 + lengthdir_y(shipDist, g_dungeon2Dir)
//---


//Crew etc boosts
globalvar CREW_SPEED_BOOST;
CREW_SPEED_BOOST = .5



//Variables

globalvar g_town2Unlocked, g_town3Unlocked, g_town5Unlocked, g_finalIslandUnlocked;
g_town2Unlocked = false
g_town3Unlocked = false
g_town5Unlocked = false
g_finalIslandUnlocked = false

//Note: These should be directed towards the first town, at the start of the game
globalvar g_shipX, g_shipY, g_shipDir;
g_shipX = g_town1X
g_shipY = g_town1Y
g_shipDir = g_town1Dir

//Keep track of the exit point of the most recently visited port
globalvar g_shipLastPortX, g_shipLastPortY, g_shipLastPortDir;
g_shipLastPortX = g_shipX
g_shipLastPortY = g_shipY
g_shipLastPortDir = g_shipDir

globalvar g_townId;
g_townId = 'town1Tavern'   //The location of the first cinematic of the game

//The truth is that "town markers" is an obsolete term, kept out of precedence; the marker list
//contains all markers that make the game's plot move. Each marker is given a unique ID.
globalvar g_townMarkers, g_dlg;
g_townMarkers = ds_list_create()
g_dlg = ds_list_create()

globalvar g_avatarAttacking;
g_avatarAttacking = false;

globalvar g_lastChangedRoomTime;
g_lastChangedRoomTime = 0

globalvar g_gold, g_landHealth, g_shipHealth;
g_gold = 10   //Starting gold value
g_landHealth = LAND_HEALTH_MAX
g_shipHealth = SHIP_HEALTH_MAX

globalvar g_weaponDamageBase, g_weaponLevel, g_armorLevel;
g_weaponDamageBase = 1
g_weaponLevel = 1   //Damage multiplier; this number will go up as weapon grows stronger
g_armorLevel = 1   //Damage multiplier; this number will go down as armor grows stronger

//Global stats for player ship; subject to change
globalvar g_shipMaxSpeed, g_cbFireDelay, g_shipArmor;
g_shipMaxSpeed = 3.5
g_cbFireDelay = 1000
g_shipArmor = 1.0   //Damage multiplier; this number will go down as armor grows stronger

MakeStartingTownMarkers()


//Keep track of which chests have been picked up
globalvar g_usedChests;
g_usedChests = ds_list_create()


//Global variables for messages (shown indirectly via dialogue manager)
globalvar g_msgText, g_msgAlpha, g_bMsgDisplayed, g_msgTextCached;
g_msgText = ''
g_msgAlpha = 0
g_bMsgDisplayed = false
g_msgTextCached = ''


//Event flags and such

globalvar g_shipwreckUnlocked, g_shipwreckExamined, g_openingCinematic, g_finalCinematic;
g_shipwreckUnlocked = false
g_shipwreckExamined = false
g_openingCinematic = true   //This will be true at the start of the game
g_finalCinematic = false

globalvar g_bossShipBeaten;
g_bossShipBeaten = false

globalvar g_firstShipDeath, g_showFirstShipDeathMsg, g_firstTimeInOcean, g_firstTimeWarped;
g_firstShipDeath = true
g_showFirstShipDeathMsg = false
g_firstTimeInOcean = true
g_firstTimeWarped = true

globalvar g_moreWarships, g_firstTimeNearBright, g_beatFinalBoss;
g_moreWarships = false
g_firstTimeNearBright = true
g_beatFinalBoss = false

globalvar g_bCrashedReefs;
g_bCrashedReefs = false

globalvar g_firstTimeLoseSpecialShip1;
g_firstTimeLoseSpecialShip1 = true

globalvar g_recruitedHenry;
g_recruitedHenry = false

globalvar g_music;
g_music = -1

globalvar g_shipwrightBasePrice;
g_shipwrightBasePrice = 30

//Room persistence
globalvar g_paused, g_pausedMusic, g_resuming;
g_paused = false
//Note that g_pausedRoom and g_removePersistenceFrom have been moved, so they are not affected here.
g_pausedMusic = -1
g_resuming = false

/*
globalvar g_removingMusic, g_removingMusicVolume;
g_removingMusic = -1   //The piece of music that's being faded out
g_removingMusicVolume = 1   //Always start at full volume
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
