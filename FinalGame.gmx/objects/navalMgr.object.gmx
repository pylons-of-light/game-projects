<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shipMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MakeOceanDetails()

if room != rm_final_ship_boss {
    //Note that this will take place immediately; it doesn't wait until any potential dialogue finishes.
    if g_firstTimeInOcean {
        instance_create(room_width, room_height, tutorialMgr)
        g_firstTimeInOcean = false
    }
    
    alarm[0] = room_speed * 1
}

if g_msgText == '' and g_msgTextCached != ''
    ShowDialogue('msg_text_cached')
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Spawn NPCs if necessary

var merchantCount = instance_number(merchantShip);
var warshipCount = instance_number(warship);
var totalShips = merchantCount + warshipCount;

if totalShips &lt; 40 {
    var type;
    
    if g_moreWarships {
        //Create equal numbers of merchant ships and warships
        if merchantCount &lt;= warshipCount
            type = merchantShip
        else
            type = warship
    }
    else {
        //Create more merchant ships than warships
        if merchantCount &lt; warshipCount + 15
            type = merchantShip
        else
            type = warship
    }
    
    var viewLeft = view_xview[0] - HALF_SHIP;
    var viewRight = view_xview[0] + view_wview[0] + HALF_SHIP;
    var viewTop = view_yview[0] - HALF_SHIP;
    var viewBottom = view_yview[0] + view_yview[0] + HALF_SHIP;
    
    var i, randX, randY;
    for(i = 0; i &lt; GENERATE_RAND_LOCATIONS; i += 1) {
        randX = irandom(room_width)
        randY = irandom(room_height)
        
        if not place_meeting(randX, randY, navalBlock) and
           ((randX &lt; viewLeft or randX &gt; viewRight) and (randY &lt; viewTop or randY &gt; viewBottom)) {
            break;
        }
    }
    
    if i == GENERATE_RAND_LOCATIONS {
        alarm[0] = room_speed * 5
        exit
    }
    
    var new = instance_create(randX, randY, type);
    new.destinationX = randX
    new.destinationY = randY
    //Note: We're not going to bother with setting direction or image_angle, since these
    //ships are created offscreen.
    SetRandomShipDestination(new)
    
    alarm[0] = room_speed * .1
}
else {
    alarm[0] = room_speed * 8
    //show_message(string(merchantCount) + " " + string(warshipCount))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not ds_list_empty(g_dlg) or instance_exists(tutorialMgr)
    useRoomSpeed = DIALOGUE_ROOM_SPEED
else {
    useRoomSpeed = FAST_ROOM_SPEED
    
    if instance_exists(npcShip) {
        with npcShip {
            if bHostile
               and x &gt;= view_xview[0] - HALF_SHIP and x &lt;= view_xview[0] + view_wview[0] + HALF_SHIP
               and y &gt;= view_yview[0] - HALF_SHIP and y &lt;= view_yview[0] + view_hview[0] + HALF_SHIP {
                other.useRoomSpeed = SLOW_ROOM_SPEED
                break
               }
        }
    }
}

//Note: Assumes room speed is integral
if room_speed &lt; useRoomSpeed
    room_speed += 1
else if room_speed &gt; useRoomSpeed
    room_speed -= 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check for gold goals

TryGoldGoalDialogue('gold_goal1', 'gold_goal1_reached', 500)

//TODO other gold goals


/*
if instance_exists(cannonball) {
    instance_deactivate_object(npcShip)
    instance_activate_region(view_xview[0] - 64, view_yview - 64, view_wview[0] + 128, view_hview + 128, true)
}
else {
    instance_activate_object(npcShip)
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_hud)
draw_set_colour(c_white)
draw_set_halign(fa_left)
draw_text(view_xview[0] + 15, view_yview[0] + 20, 'Gold: ' + string(g_gold))
//draw_text(view_xview[0] + 15, view_yview[0] + 20, 'Hull: ' + string(g_shipHealth) + '%')
draw_healthbar(view_xview[0] + 20, view_yview[0] + 45, view_xview[0] + 30, view_yview[0] + 165, g_shipHealth, make_color_rgb(48, 44, 44), make_color_rgb(194, 19, 19), make_color_rgb(121, 142, 68), 3, true, true)

//draw_text(view_xview[0] + 15, view_yview[0] + 200, 'NPCs: ' + string(instance_number(npcShip)))
//draw_text(view_xview[0] + 15, view_yview[0] + 200, 'CBs: ' + string(instance_number(cannonball)))

/*
if ds_list_empty(g_dlg) {
    draw_text(view_xview[0] + 15, view_yview[0] + 200, 'dlg: ' + 'empty')
}
else {
    draw_text(view_xview[0] + 15, view_yview[0] + 200, 'dlg: ' + g_dlg[|0])
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>90,90</point>
    <point>90,90</point>
  </PhysicsShapePoints>
</object>
